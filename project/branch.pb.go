// Code generated by protoc-gen-go. DO NOT EDIT.
// source: branch.proto

/*
Package project is a generated protocol buffer package.

It is generated from these files:
	branch.proto
	commit.proto
	language.proto
	project.proto
	repository.proto

It has these top-level messages:
	BranchMeta
	Branch
	CommitMeta
	Commit
	Language
	GetProjectMessage
	Project
	GetProjectsResponse
	Repository
*/
package project

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BranchMeta struct {
	Languages []*Language `protobuf:"bytes,1,rep,name=languages" json:"languages,omitempty"`
}

func (m *BranchMeta) Reset()                    { *m = BranchMeta{} }
func (m *BranchMeta) String() string            { return proto.CompactTextString(m) }
func (*BranchMeta) ProtoMessage()               {}
func (*BranchMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BranchMeta) GetLanguages() []*Language {
	if m != nil {
		return m.Languages
	}
	return nil
}

type Branch struct {
	Meta    *BranchMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Name    string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Commits []*Commit   `protobuf:"bytes,3,rep,name=commits" json:"commits,omitempty"`
}

func (m *Branch) Reset()                    { *m = Branch{} }
func (m *Branch) String() string            { return proto.CompactTextString(m) }
func (*Branch) ProtoMessage()               {}
func (*Branch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Branch) GetMeta() *BranchMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Branch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Branch) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func init() {
	proto.RegisterType((*BranchMeta)(nil), "project.BranchMeta")
	proto.RegisterType((*Branch)(nil), "project.Branch")
}

func init() { proto.RegisterFile("branch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2a, 0x4a, 0xcc,
	0x4b, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x28, 0xca, 0xcf, 0x4a, 0x4d,
	0x2e, 0x91, 0xe2, 0xcb, 0x49, 0xcc, 0x4b, 0x2f, 0x4d, 0x4c, 0x4f, 0x85, 0x48, 0x48, 0xf1, 0x24,
	0xe7, 0xe7, 0xe6, 0x66, 0x96, 0x40, 0x78, 0x4a, 0xb6, 0x5c, 0x5c, 0x4e, 0x60, 0x6d, 0xbe, 0xa9,
	0x25, 0x89, 0x42, 0xfa, 0x5c, 0x9c, 0x30, 0xd5, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46,
	0x82, 0x7a, 0x50, 0x83, 0xf4, 0x7c, 0xa0, 0x32, 0x41, 0x08, 0x35, 0x4a, 0x05, 0x5c, 0x6c, 0x10,
	0xed, 0x42, 0xea, 0x5c, 0x2c, 0xb9, 0xa9, 0x25, 0x89, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46,
	0xc2, 0x70, 0x5d, 0x08, 0xd3, 0x83, 0xc0, 0x0a, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x4d, 0x2e, 0x76, 0x88, 0xab, 0x8a,
	0x25, 0x98, 0xc1, 0xb6, 0xf2, 0xc3, 0xf5, 0x3b, 0x83, 0xc5, 0x83, 0x60, 0xf2, 0x49, 0x6c, 0x60,
	0x77, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xba, 0x53, 0x2a, 0xd4, 0xee, 0x00, 0x00, 0x00,
}
